{"version":3,"file":"src.esm.js","sources":["../../src/NoisyNotification/NoisyNotification.jsx"],"sourcesContent":["\r\nclass NoisyNotification extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'open' });\r\n        this.loadTemplate();\r\n        this.noiseTexture = null;\r\n        this.timer = null;\r\n        this.isPaused = false;\r\n        this.isExpanded = false;\r\n        this.startTime = Date.now();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['state', 'tint', 'duration'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'state') {\r\n            this.updateState();\r\n        } else if (name === 'tint') {\r\n            this.updateTint();\r\n        } else if (name === 'duration') {\r\n            this.updateDuration();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.generateNoiseTexture();\r\n        this.loadTemplate().then(() => {\r\n            this.startTimer();\r\n            this.addEventListeners();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.clearTimer();\r\n        this.removeEventListeners();\r\n    }\r\n\r\n    async loadTemplate() {\r\n        const response = await fetch('draft/noisy-notification.html');\r\n        const template = await response.text();\r\n        this.shadowRoot.innerHTML = template;\r\n        this.addStyles();\r\n    }\r\n\r\n    addStyles() {\r\n        fetch('draft/noisy-notification.css')\r\n            .then(response => response.text())\r\n            .then(css => {\r\n                const style = document.createElement('style');\r\n                style.textContent = css;\r\n                this.shadowRoot.appendChild(style);\r\n            });\r\n    }\r\n\r\n    addEventListeners() {\r\n        const closeButton = this.shadowRoot.querySelector('.close-button');\r\n        const expandButton = this.shadowRoot.querySelector('.expand-button');\r\n    \r\n        closeButton.addEventListener('click', () => this.dismissState());\r\n        expandButton.addEventListener('click', () => this.toggleExpand());\r\n        this.addEventListener('mouseover', () => this.pauseTimer());\r\n        this.addEventListener('mouseleave', () => this.resumeTimer());\r\n        this.addEventListener('touchstart', () => this.pauseTimer());\r\n        this.addEventListener('touchend', () => this.resumeTimer());\r\n    }\r\n    \r\n    removeEventListeners() {\r\n        const closeButton = this.shadowRoot.querySelector('.close-button');\r\n        const expandButton = this.shadowRoot.querySelector('.expand-button');\r\n    \r\n        closeButton.removeEventListener('click', this.dismissState);\r\n        expandButton.removeEventListener('click', this.toggleExpand);\r\n        this.removeEventListener('mouseover', this.pauseTimer);\r\n        this.removeEventListener('mouseleave', this.resumeTimer);\r\n        this.removeEventListener('touchstart', this.pauseTimer);\r\n        this.removeEventListener('touchend', this.resumeTimer);\r\n    }\r\n\r\n    generateNoiseTexture() {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        const width = 512;\r\n        const height = 512;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        function prng(seed) {\r\n            let value = seed;\r\n            return function () {\r\n                value = (value * 9301 + 49297) % 233280;\r\n                return value / 233280;\r\n            };\r\n        }\r\n\r\n        function generateNoise(ctx, width, height, seed) {\r\n            const imageData = ctx.createImageData(width, height);\r\n            const data = imageData.data;\r\n            const random = prng(seed);\r\n\r\n            for (let i = 0; i < data.length; i += 4) {\r\n                const value = Math.floor(random() * 255);\r\n                data[i] = value;\r\n                data[i + 1] = value;\r\n                data[i + 2] = value;\r\n                data[i + 3] = 50; // Semi-transparent\r\n            }\r\n\r\n            ctx.putImageData(imageData, 0, 0);\r\n        }\r\n\r\n        generateNoise(ctx, width, height, 42);\r\n        this.noiseTexture = canvas.toDataURL();\r\n        this.shadowRoot.querySelector('.noise').style.backgroundImage = `url(${this.noiseTexture})`;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.isCollapsible) {\r\n            this.clearTimer();\r\n            this.startTime = Date.now();\r\n            this.timer = setTimeout(() => this.dismissState(), this.duration);\r\n        }\r\n    }\r\n\r\n    clearTimer() {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n    pauseTimer() {\r\n        if (this.isCollapsible && !this.isPaused) {\r\n            this.isPaused = true;\r\n            this.clearTimer();\r\n        }\r\n    }\r\n\r\n    resumeTimer() {\r\n        if (this.isCollapsible && this.isPaused) {\r\n            this.isPaused = false;\r\n            this.startTimer();\r\n        }\r\n    }\r\n\r\n    dismissState() {\r\n        this.clearTimer();\r\n        this.dispatchEvent(new CustomEvent('dismissed'));\r\n        this.remove(); // Optionally remove from DOM\r\n    }\r\n\r\n    toggleExpand() {\r\n        this.isExpanded = !this.isExpanded;\r\n        this.shadowRoot.querySelector('.expand-button span').textContent = this.isExpanded ? 'ðŸ”¼' : 'ðŸ”½'; // Change symbol\r\n        this.style.height = this.isExpanded ? 'auto' : '50px'; // Toggle height\r\n    }\r\n\r\n    updateState() {\r\n        this.style.backgroundColor = this.getTintedColor();\r\n    }\r\n\r\n    updateTint() {\r\n        this.style.backgroundColor = this.getTintedColor();\r\n    }\r\n\r\n    updateDuration() {\r\n        this.clearTimer();\r\n        this.startTimer();\r\n    }\r\n\r\n    getTintedColor() {\r\n        const colorMap = {\r\n            danger: '#FF4500',\r\n            warning: '#F6C737',\r\n            'info-active': '#52C74D',\r\n            'info-inactive': '#5E7A74',\r\n        };\r\n\r\n        let color = colorMap[this.getAttribute('state')] || '#000';\r\n        return this.tintColor(color, parseInt(this.getAttribute('tint')) || 0);\r\n    }\r\n\r\n    tintColor(color, tintLevel) {\r\n        const tints = {\r\n            0: '00',\r\n            1: '33',\r\n            2: '66',\r\n            3: '99',\r\n        };\r\n\r\n        return `${color}${tints[tintLevel]}`;\r\n    }\r\n\r\n    get isCollapsible() {\r\n        return ['info', 'warning', 'success'].includes(this.getAttribute('state'));\r\n    }\r\n\r\n    get duration() {\r\n        return parseInt(this.getAttribute('duration')) || 5000;\r\n    }\r\n}\r\n\r\ncustomElements.define('noisy-notification', NoisyNotification);\r\n\r\nmodule.exports = NoisyNotification;\r\n"],"names":["NoisyNotification","_HTMLElement","_this","_classCallCheck","this","attachShadow","mode","loadTemplate","noiseTexture","timer","isPaused","isExpanded","startTime","Date","now","_inherits","_createClass","key","value","name","oldValue","newValue","updateState","updateTint","updateDuration","_this2","generateNoiseTexture","then","startTimer","addEventListeners","clearTimer","removeEventListeners","_loadTemplate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","template","wrap","_callee$","_context","prev","next","fetch","sent","text","shadowRoot","innerHTML","addStyles","stop","apply","arguments","_this3","css","style","document","createElement","textContent","appendChild","_this4","closeButton","querySelector","expandButton","addEventListener","dismissState","toggleExpand","pauseTimer","resumeTimer","removeEventListener","canvas","ctx","getContext","width","height","seed","imageData","createImageData","data","random","prng","i","length","Math","floor","putImageData","generateNoise","toDataURL","backgroundImage","concat","_this5","isCollapsible","setTimeout","duration","clearTimeout","dispatchEvent","CustomEvent","remove","backgroundColor","getTintedColor","color","danger","warning","getAttribute","tintColor","parseInt","tintLevel","get","includes","_wrapNativeSuper","HTMLElement","customElements","define","module","exports"],"mappings":"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"}